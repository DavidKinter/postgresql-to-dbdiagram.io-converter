[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pg2dbml"
version = "1.0.0"
description = "Convert PostgreSQL databases to DBML for visualization on dbdiagram.io"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "David Kinter", email = "david.kinter@hotmail.com"}
]
maintainers = [
    {name = "PostgreSQL to DBML Converter Contributors"}
]
keywords = ["postgresql", "dbml", "database", "visualization", "dbdiagram.io", "schema", "conversion"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Tools",
    "Topic :: System :: Systems Administration",
    "Topic :: Documentation",
]
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "sqlparse>=0.4.0",
]

# No optional dependencies - keep it simple!
# Install dev tools manually if needed: pip install pytest pytest-cov black

[project.urls]
Homepage = "https://github.com/DavidKinter/postgresql-to-dbdiagram.io-converter"
Documentation = "https://github.com/DavidKinter/postgresql-to-dbdiagram.io-converter#readme"
Repository = "https://github.com/DavidKinter/postgresql-to-dbdiagram.io-converter.git"
Issues = "https://github.com/DavidKinter/postgresql-to-dbdiagram.io-converter/issues"
Changelog = "https://github.com/DavidKinter/postgresql-to-dbdiagram.io-converter/blob/main/CHANGELOG.md"

[project.scripts]
pg2dbml = "src.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sqlparse.*",
]
ignore_missing_imports = true